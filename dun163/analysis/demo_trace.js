

var my_sample = function(e, t) {
    var n = e.length;
    if (n <= t)
        return e;
    for (var i = [], r = 0, o = 0; o < n; o++){
        // o >= r * (n - 1) / (t - 1) && (i.push(e[o]), r += 1);
        o >= r * (n - 1) / (t - 1) && (i.push(e[o]), r += 1);
    }

    return i
}

var my_m = function(e, t, n) {
    var a = ["i", "/", "x", "1", "X", "g", "U", "0", "z", "7", "k", "8", "N", "+", "l", "C", "p", "O", "n", "P", "r", "v", "6", "\\", "q", "u", "2", "G", "j", "9", "H", "R", "c", "w", "T", "Y", "Z", "4", "b", "f", "S", "J", "B", "h", "a", "W", "s", "t", "A", "e", "o", "M", "I", "E", "Q", "5", "m", "D", "d", "V", "F", "L", "K", "y"]
    var i, r, o, s = "3", l = [];
    if (1 == n)
        i = e[t],
            r = 0,
            o = 0,
            l.push(a[i >>> 2 & 63]),
            l.push(a[(i << 4 & 48) + (r >>> 4 & 15)]),
            l.push(s),
            l.push(s);
    else if (2 == n)
        i = e[t],
            r = e[t + 1],
            o = 0,
            l.push(a[i >>> 2 & 63]),
            l.push(a[(i << 4 & 48) + (r >>> 4 & 15)]),
            l.push(a[(r << 2 & 60) + (o >>> 6 & 3)]),
            l.push(s);
    else {
        if (3 != n)
            throw new Error("1010");
        i = e[t],
            r = e[t + 1],
            o = e[t + 2],
            l.push(a[i >>> 2 & 63]),
            l.push(a[(i << 4 & 48) + (r >>> 4 & 15)]),
            l.push(a[(r << 2 & 60) + (o >>> 6 & 3)]),
            l.push(a[63 & o])
    }
    return l.join("")
}

var my_ = function(e) {
    var t = 3;
    try {
        for (var n = [], i = 0; i < e.length; ) {
            if (!(i + t <= e.length)) {
                n.push(my_m(e, i, e.length - i));
                break
            }
            n.push(my_m(e, i, t));
            i += t;
        }
        return n.join("")
    } catch (r) {
        throw new Error("1010")
    }
}


//添加鼠标轨迹数组
function my_n(e, t) {
    function n(e, t) {
        return e.charCodeAt(Math.floor(t % e.length))
    }
    function i(e, t) {
        return t.split("").map(function(t, i) {
            return t.charCodeAt(0) ^ n(e, i)
        })
    }
    t = i(e, t);
    var result = my_(t);
    return result;
}


/**
 * 轨迹描述：
 * [Math.round(i.dragX < 0 ? 0 : i.dragX), Math.round(i.clientY - i.startY), a.now() - i.beginTime]
 *
 * 滑动距离，
 *
 * */

var test_e = "d31197478b1b4c95a6fb28c36174a945"
var test_t = "152,46,7239"

teste = "c6274f899733492fa5589e6193edcb87";
test_t = "4,1,190518";

console.log(my_n(test_e, test_t))

function test(a, t) {
    console.log("a: ", a)
    console.log("t: ", t)
}

var t = Date.now();
console.log(t)
test(test_e, [Math.round(12.2), Math.round(156.88), t - 1596522199647])





/**
 *
 *
 *

 下面这个轨迹是在前端采集的，可以直接写死，然后后面随机抽样50个点即可
 [[4,-1,81],[5,-2,89],[5,-3,97],[6,-4,105],[7,-5,113],[8,-6,122],[8,-8,137],[8,-9,145],[8,-10,159],[8,-11,167],[9,-13,183],[9,-13,191],[10,-14,203],[10,-15,211],[10,-16,219],[11,-17,227],[12,-17,235],[12,-17,243],[12,-18,255],[13,-18,285],[14,-18,293],[15,-18,313],[16,-18,322],[16,-18,329],[18,-18,337],[19,-18,345],[20,-18,354],[21,-18,361],[22,-18,370],[23,-18,377],[24,-17,386],[26,-17,391],[27,-15,400],[28,-14,410],[31,-13,415],[32,-12,427],[33,-10,431],[35,-9,441],[36,-8,447],[38,-7,456],[38,-6,466],[40,-5,472],[40,-5,479],[40,-4,488],[42,-3,495],[43,-2,504],[44,-2,511],[45,-1,518],[46,-1,525],[47,-1,534],[48,-1,542],[48,0,550],[49,0,573],[50,0,581],[50,1,597],[51,2,605],[52,2,613],[52,3,622],[53,3,629],[55,3,638],[56,4,643],[57,6,652],[59,7,659],[61,8,668],[64,9,675],[65,11,684],[67,11,691],[69,11,700],[71,12,708],[72,12,716],[73,12,724],[74,12,731],[76,12,740],[77,12,747],[78,12,755],[80,12,761],[80,12,770],[80,12,774],[82,12,777],[83,12,786],[84,12,793],[85,12,802],[87,11,809],[88,11,818],[89,10,825],[91,9,834],[92,8,842],[93,7,850],[95,7,858],[96,6,866],[97,5,872],[97,5,874],[99,3,879],[100,3,888],[101,2,895],[102,0,904],[102,-1,911],[103,-2,919],[104,-4,927],[105,-5,936],[106,-6,944],[107,-7,952],[107,-7,958],[108,-9,959],[110,-10,968],[110,-11,975],[111,-12,984],[112,-13,990],[112,-13,997],[112,-14,1006],[113,-15,1013],[114,-16,1029],[114,-17,1038],[115,-18,1045],[115,-19,1054],[116,-21,1062],[117,-21,1070],[118,-22,1085],[118,-23,1093],[119,-23,1101],[120,-24,1109],[120,-25,1116],[120,-25,1124],[121,-25,1135],[122,-25,1143],[122,-26,1152],[123,-26,1159],[124,-28,1168],[125,-29,1175],[126,-29,1184],[128,-29,1191],[128,-29,1200],[129,-30,1208],[130,-31,1216],[132,-31,1224],[132,-31,1231],[134,-31,1240],[136,-31,1245],[136,-32,1254],[138,-32,1261],[140,-32,1270],[140,-32,1277],[142,-32,1286],[143,-32,1293],[144,-32,1302],[146,-32,1309],[147,-32,1318],[148,-32,1325],[149,-32,1334],[151,-32,1341],[152,-32,1350],[153,-31,1356],[155,-30,1363],[156,-29,1372],[158,-27,1379],[159,-27,1388],[160,-26,1395],[162,-25,1404],[164,-23,1411],[164,-22,1420],[166,-21,1427],[168,-21,1436],[168,-19,1444],[169,-18,1452],[171,-17,1459],[172,-15,1468],[174,-14,1474],[175,-13,1481],[176,-12,1490],[178,-11,1497],[180,-9,1506],[181,-9,1521],[183,-8,1529],[184,-7,1538],[185,-6,1545],[187,-6,1554],[188,-5,1561],[189,-5,1570],[191,-4,1577],[192,-3,1586],[193,-2,1593],[194,-2,1600],[196,-1,1608],[196,-1,1616],[198,-1,1624],[200,-1,1631],[200,-1,1640],[202,-1,1647],[203,-1,1656],[204,-1,1663],[205,-1,1672],[206,-1,1679],[208,-1,1688],[208,-1,1695],[210,-1,1709],[212,-1,1718],[212,-1,1725],[214,-1,1734],[216,-1,1741],[216,-2,1750],[218,-3,1758],[220,-5,1765],[221,-6,1774],[222,-7,1781],[224,-9,1790],[225,-10,1797],[227,-12,1806],[228,-13,1813],[229,-14,1822],[231,-16,1829],[232,-17,1838],[234,-19,1843],[235,-20,1852],[236,-21,1859],[238,-22,1868],[240,-23,1875],[240,-24,1884],[240,-24,1891],[242,-25,1900],[242,-25,1908],[244,-26,1915],[244,-26,1924],[245,-27,1931],[247,-28,1940],[248,-29,1947],[248,-29,1954],[250,-29,1961],[251,-30,1977],[252,-30,1986],[252,-31,1997],[253,-31,2010],[254,-31,2018],[255,-31,2029],[256,-31,2061],[256,-31,2079],[257,-31,2095],[258,-31,2107],[259,-31,2131],[260,-31,2151],[260,-31,2159],[262,-31,2175],[263,-31,2192],[264,-30,2197],[264,-30,2209],[265,-29,2217],[266,-29,2225],[267,-29,2233],[267,-29,2241],[268,-29,2249],[269,-29,2265],[269,-28,2273],[270,-28,2289],[272,-28,2297],[272,-27,2309],[272,-27,2317],[272,-26,2323],[273,-26,2331],[273,-25,2343],[274,-25,2383],[275,-25,2391],[276,-24,2403],[276,-24,2449],[276,-23,2457],[277,-22,2469],[278,-21,2485],[278,-21,2493],[288,-4,2635],[288,-3,2643],[288,-2,2659]]


 *
 *
 *
 *
 *
 *
 *
 *
 * */








